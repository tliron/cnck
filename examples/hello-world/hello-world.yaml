apiVersion: apps/v1
kind: Deployment

metadata:
  name: myapp
  labels:
    app: myapp
  annotations:
    reloader.stakater.com/auto: "true"

spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
      - name: main
        image: docker.io/paulbouwer/hello-kubernetes:1.8
        volumeMounts:
        - mountPath: /etc/myapp # will have a "myapp.yaml" file
          name: config
      volumes:
      - name: config
        configMap:
          name: myapp

---

apiVersion: v1
kind: Pod

metadata:
  name: db1
  labels:
    app: mariadb

spec:
  containers:
  - name: main
    image: docker.io/paulbouwer/hello-kubernetes:1.8

---

apiVersion: v1
kind: Pod

metadata:
  name: db2
  labels:
    app: mariadb

spec:
  containers:
  - name: main
    image: docker.io/paulbouwer/hello-kubernetes:1.8

---

apiVersion: v1
kind: ConfigMap

metadata:
  name: myapp
  annotations:
    cnck.github.com/render: myapp.yaml.template
    cnck.github.com/refresh: 1m

data:
  myapp.yaml.template: |
    log-file: /var/log/myapp.log
    database-url: <%
        let addresses = [];
        let databases = k8s.select({kind: 'Pod', labels: {app: 'mariadb'}});
        if (!databases.length) throw 'no database nodes';
        for (let d = 0; d < databases.length; d++) {
            let address = databases[d].status.podIP;
            if (!address) throw 'missing address';
            addresses.push(address);
        }
        write('jdbc:mariadb:loadbalance://' + addresses.join(',') + '/mydb');
    %>
